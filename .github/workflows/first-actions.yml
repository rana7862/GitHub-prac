name: Merge Dev to Testing on PR Merge

on:
  pull_request:
    types:
      - closed

jobs:
  test:
    if: |
      github.event.pull_request.merged == true 
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Run tests
        run: |
          cd src
          python -m pytest addition.py

  merge-to-testing:
    if: |
      github.event.pull_request.merged == true 
     
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.email "rana.ritik9639@gmail.com"
          git config --global user.name "rana7862"

      - name: Merge development into testing
        run: |
          git fetch origin development
          git checkout testing
          git merge origin/development --no-edit
          git push origin testing
  script:
    if: |
      github.event.pull_request.merged == true 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Run custom script
        run: |
          sudo chmod +x ./script.sh
          bash script.sh create_new_release
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential dpkg-dev debhelper fakeroot

      - name: Build DEB package
        run: |
          mkdir -p build/package/usr/local/bin
          cp ./GitHub-prac build/package/usr/local/bin/
          echo "Package: project" > build/package/DEBIAN/control
          echo "Version: 1.0.0" >> build/package/DEBIAN/control
          echo "Architecture: amd64" >> build/package/DEBIAN/control
          echo "Maintainer: Your Name <rana.ritik9639@gmail.com>" >> build/package/DEBIAN/control
          echo "Description: Your application" >> build/package/DEBIAN/control
          dpkg-deb --build build/package
          
      - name: Upload DEB artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-deb
          path: build/package.deb

